plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.hidetake.swagger.generator' version '2.19.2'
//	id 'org.liquibase.gradle' version '2.1.1'
}

group = 'app.system.booking.flight'
version = '0.0.1-SNAPSHOT'

java{
	toolchain{
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	jar {
		archivesBaseName = 'flight-booking-system'
	}

	all*.exclude group:'org.springframework.boot', module:'spring-boot-starter-logging'
}

repositories {
	mavenCentral()
	jcenter()
}

ext {
	set('testcontainersVersion', "1.17.6")
	set('mapstructVersion', "1.5.3.Final")
	set('lombokMapstructBindingVersion', "0.2.0")
	set('springDocOpenApiVersion', "1.6.15")
	set('jacksonDataformatYamlVersion', "2.14.2")
	set('swaggerAnnotationsVersion', "2.2.8")
	set('openApiGeneratorVersion', "6.4.0")
	set('swaggerCoreVersion', "2.2.8")
	set('swaggerCodegenCLIVersion', "3.0.27")
	set('SpringSecurityWebVersion', "6.0.3")
	set('springCloudversion', "2021.0.5")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation "org.springdoc:springdoc-openapi-ui:${springDocOpenApiVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	implementation "org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorVersion}"
	implementation "io.swagger.core.v3:swagger-models:${swaggerCoreVersion}"
	implementation "io.swagger.core.v3:swagger-annotations:${swaggerCoreVersion}"
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '6.1.1'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
	implementation 'org.jetbrains:annotations:20.1.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	swaggerCodegen "io.swagger.codegen.v3:swagger-codegen-cli:3.0.41"

	compileOnly 'org.projectlombok:lombok'
	compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'


	implementation 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

//	implementation 'org.liquibase:liquibase-core'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudversion}"
	}
}


test {
	useJUnitPlatform()
}